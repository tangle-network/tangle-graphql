# To improve query performance, we strongly suggest adding indexes to any field that you plan to filter or sort by
# Add the `@index` or `@index(unique: true)` annotation after any non-key field
# https://academy.subquery.network/build/graphql.html#indexing-by-non-primary-key-field

"""
Represents an Account in the system.
"""
type Account @entity {
  """
  Account's account ID, serves as the unique identifier.
  """
  id: ID!

  """
  The Operator associated with this account.
  """
  operator: Operator @derivedFrom(field: "account")

  """
  The Delegator associated with this account.
  """
  delegator: Delegator @derivedFrom(field: "account")

  """
  List of Lst Pool Members associated with this account.
  """
  lstPoolMembers: [LstPoolMember!]! @derivedFrom(field: "account")

  """
  List of Blueprints owned by this account.
  """
  blueprints: [Blueprint!]! @derivedFrom(field: "owner")

  """
  List of Service Requests owned by this account.
  """
  serviceRequests: [ServiceRequest!]! @derivedFrom(field: "owner")

  """
  List of Services owned by this account.
  """
  services: [Service!]! @derivedFrom(field: "owner")

  """
  List of Job calls made by this account.
  """
  jobCalls: [JobCall!]! @derivedFrom(field: "caller")

  """
  The block number when the account was created.
  """
  createdAt: Int!

  """
  The block number of the last update to the account's information.
  """
  lastUpdateAt: Int!
}

"""
Represents an Operator in the system.
"""
type Operator @entity {
  """
  Operator's account ID, serves as the unique identifier.
  """
  id: ID!

  """
  The account associated with this Operator.
  """
  account: Account!

  """
  Current status of the Operator (ACTIVE, LEAVING, or OFFLINE).
  """
  currentStatus: OperatorStatus!

  """
  The current stake amount of the Operator.
  """
  currentStake: BigInt!

  """
  The amount of tokens scheduled to be unstaked by the Operator.
  This represents the pending unstake amount that can be released after the unbonding period.
  """
  scheduledUnstakeAmount: BigInt

  """
  History of status changes for the Operator.
  """
  statusHistory: [OperatorStatusChange!]! @derivedFrom(field: "operator")

  """
  History of bond changes for the Operator.
  """
  bondChanges: [OperatorBondChange!]! @derivedFrom(field: "operator")

  """
  The block number when the Operator joined the network.
  """
  joinedAt: Int!

  """
  The block number of the last update to the Operator's information.
  """
  lastUpdateAt: Int!

  """
  List of delegations made to this Operator.
  """
  delegations: [Delegation!] @derivedFrom(field: "operator")

  """
  Total number of Blueprints registered by this Operator.
  """
  totalBlueprints: Int!

  """
  Total number of Service Requests requested by this Operator.
  """
  totalServiceRequests: Int!

  """
  Total number of Services operated by this Operator.
  """
  totalServices: Int!

  """
  List of job results executed by this Operator.
  """
  jobResults: [JobResult!]! @derivedFrom(field: "operator")
}

"""
Represents a change in the status of an Operator in the network.
"""
type OperatorStatusChange @entity {
  """
  Unique identifier for the status change. Composite key: operator ID + block number
  """
  id: ID!

  """
  The Operator whose status has changed.
  """
  operator: Operator!

  """
  The new status of the Operator.
  """
  status: OperatorStatus!

  """
  The block number at which the status change occurred.
  """
  blockNumber: Int!
}

"""
Enum representing the current status of an Operator in the network.
"""
enum OperatorStatus {
  """
  The Operator is actively participating in the network.
  """
  ACTIVE

  """
  The Operator has initiated the process to leave the network but is still participating.
  """
  LEAVING

  """
  The Operator is not currently participating in the network.
  """
  OFFLINE
}

"""
Represents a change in the bond amount of an Operator in the network.
"""
type OperatorBondChange @entity {
  """
  Unique identifier for the bond change. Composite key: operator ID + block number
  """
  id: ID!

  """
  The Operator whose bond amount has changed.
  """
  operator: Operator!

  """
  The block number at which the bond change occurred.
  """
  blockNumber: Int!

  """
  The amount of the bond change.
  """
  amount: BigInt!

  """
  The type of action that caused the bond change.
  """
  action: BondChangeAction!
}

"""
Enum representing the different types of bond change actions for an Operator.
"""
enum BondChangeAction {
  """
  The Operator has increased their bond amount.
  """
  INCREASE

  """
  The Operator has scheduled a decrease in their bond amount.
  """
  DECREASE_SCHEDULED

  """
  The scheduled decrease in the Operator's bond amount has been executed.
  """
  DECREASE_EXECUTED

  """
  The scheduled decrease in the Operator's bond amount has been cancelled.
  """
  DECREASE_CANCELLED
}

"""
Represents a Delegator in the system.
"""
type Delegator @entity {
  """
  Delegator's account ID, serves as the unique identifier.
  """
  id: ID!

  """
  The account associated with this Delegator.
  """
  account: Account!

  """
  List of deposits made by the Delegator.
  """
  deposits: [Deposit!]! @derivedFrom(field: "delegator")

  """
  List of delegations made by the Delegator.
  """
  delegations: [Delegation!]! @derivedFrom(field: "delegator")

  """
  List of unstake requests made by this Delegator.
  """
  unstakeRequests: [UnstakeRequest!]! @derivedFrom(field: "delegator")

  """
  List of withdraw requests made by this Delegator.
  """
  withdrawRequests: [WithdrawRequest!]! @derivedFrom(field: "delegator")

  """
  The block number when the Delegator first interacted with the system.
  """
  joinedAt: Int!

  """
  The block number of the last update to the Delegator's information.
  """
  lastUpdateAt: Int!
}

"""
Represents a deposit made by a Delegator for a specific asset in the system.
"""
type Deposit @entity {
  """
  Unique identifier for the deposit. Composite key: delegator ID + asset ID
  """
  id: ID!

  """
  The Delegator who made the deposit.
  """
  delegator: Delegator!

  """
  The associated withdraw request for this deposit, if any.
  """
  withdrawRequest: WithdrawRequest

  """
  Indicates whether there is an active withdraw request for this deposit.
  """
  hasActiveWithdrawRequest: Boolean!

  """
  The asset ID of the deposited tokens.
  """
  assetId: BigInt!

  """
  The total amount of tokens deposited by the Delegator for this asset.
  """
  totalAmount: BigInt!

  """
  History of deposit transactions for this Delegator and asset.
  """
  history: [DepositHistory!]! @derivedFrom(field: "deposit")
}

"""
Represents a history entry for a deposit made by a Delegator.
"""
type DepositHistory @entity {
  """
  Unique identifier for the deposit history entry. Composite key: deposit ID + block number
  """
  id: ID!

  """
  The deposit this history entry is associated with.
  """
  deposit: Deposit!

  """
  The amount of tokens deposited in this transaction.
  """
  amount: BigInt!

  """
  The block number at which this deposit transaction occurred.
  """
  blockNumber: Int!
}

"""
Represents a delegation made by a Delegator to an Operator for a specific asset.
"""
type Delegation @entity {
  """
  Unique identifier for the delegation. Composite key: delegator ID + operator ID + asset ID
  """
  id: ID!

  """
  The Delegator who made the delegation.
  """
  delegator: Delegator!

  """
  The Operator to whom the delegation was made.
  """
  operator: Operator!

  """
  The associated unstake request for this delegation, if any.
  """
  unstakeRequest: UnstakeRequest

  """
  Indicates whether this delegation has an active unstake request.
  """
  hasActiveUnstakeRequest: Boolean!

  """
  The asset ID of the delegated tokens.
  """
  assetId: BigInt!

  """
  The total amount of tokens delegated.
  """
  totalAmount: BigInt!

  """
  History of changes to this delegation.
  """
  history: [DelegationHistory!]! @derivedFrom(field: "delegation")
}

"""
Represents a history entry for a delegation made by a Delegator to an Operator.
"""
type DelegationHistory @entity {
  """
  Unique identifier for the delegation history entry. Composite key: delegation ID + block number
  """
  id: ID!

  """
  The delegation this history entry is associated with.
  """
  delegation: Delegation!

  """
  The amount of tokens delegated in this transaction.
  """
  amount: BigInt!

  """
  The block number at which this delegation transaction occurred.
  """
  blockNumber: Int!
}

"""
Represents an unstake request made by a Delegator.
"""
type UnstakeRequest @entity {
  """
  Unique identifier for the unstake request. Composite key: delegator ID + operator ID + asset ID
  """
  id: ID!

  """
  The Delegator who made the unstake request.
  """
  delegator: Delegator!

  """
  The Operator from whom the tokens are being unstaked.
  """
  operator: Operator!

  """
  The associated delegation for this unstake request.
  """
  delegation: Delegation!

  """
  The asset ID of the tokens being unstaked.
  """
  assetId: BigInt!

  """
  The current status of the unstake request.
  """
  currentStatus: UnstakeRequestStatus!

  """
  The current amount of tokens in the unstake request.
  """
  currentAmount: BigInt!

  """
  The block number when the withdraw request was created.
  """
  createdAt: Int!

  """
  The block number when the withdraw request was last updated.
  """
  updatedAt: Int!

  """
  History of changes to this unstake request.
  """
  history: [UnstakeRequestHistory!]! @derivedFrom(field: "unstakeRequest")
}

"""
Represents the history of changes to an unstake request.
"""
type UnstakeRequestHistory @entity {
  """
  Unique identifier for the unstake request history entry. Composite key: unstake request ID + block number
  """
  id: ID!

  """
  The unstake request this history entry is associated with.
  """
  unstakeRequest: UnstakeRequest!

  """
  The status of the unstake request at this point in history.
  """
  status: UnstakeRequestStatus!

  """
  The amount of tokens in the unstake request at this point in history.
  """
  amount: BigInt!

  """
  The block number at which this history entry was created.
  """
  blockNumber: Int!
}

"""
Enum representing the status of an unstake request.
"""
enum UnstakeRequestStatus {
  """
  The unstake request has been scheduled but not yet executed.
  """
  SCHEDULED

  """
  The unstake request has been successfully executed.
  """
  EXECUTED

  """
  The unstake request has been cancelled before execution.
  """
  CANCELLED
}

"""
Represents a withdraw request in the system.
"""
type WithdrawRequest @entity {
  """
  Unique identifier for the withdraw request. Composite key: delegator ID + asset ID
  """
  id: ID!

  """
  The Delegator who made the withdraw request.
  """
  delegator: Delegator!

  """
  The deposit associated with this withdraw request.
  """
  deposit: Deposit!

  """
  The asset ID of the tokens being withdrawn.
  """
  assetId: BigInt!

  """
  The current status of the withdraw request.
  """
  currentStatus: WithdrawRequestStatus!

  """
  The amount of tokens requested for withdrawal.
  """
  currentAmount: BigInt!

  """
  The block number when the withdraw request was created.
  """
  createdAt: Int!

  """
  The block number when the withdraw request was last updated.
  """
  updatedAt: Int!

  """
  History of changes to this withdraw request.
  """
  history: [WithdrawRequestHistory!]! @derivedFrom(field: "withdrawRequest")
}

"""
Represents a history entry for a withdraw request.
"""
type WithdrawRequestHistory @entity {
  """
  Unique identifier for the withdraw request history entry. Composite key: withdraw request ID + block number
  """
  id: ID!

  """
  The withdraw request this history entry is associated with.
  """
  withdrawRequest: WithdrawRequest!

  """
  The status of the withdraw request at this point in history.
  """
  status: WithdrawRequestStatus!

  """
  The amount of tokens in the withdraw request at this point in history.
  """
  amount: BigInt!

  """
  The block number at which this history entry was created.
  """
  blockNumber: Int!
}

"""
Enum representing the status of an withdraw request.
"""
enum WithdrawRequestStatus {
  """
  The withdraw request has been scheduled but not yet executed.
  """
  SCHEDULED

  """
  The withdraw request has been successfully executed.
  """
  EXECUTED

  """
  The withdraw request has been cancelled before execution.
  """
  CANCELLED
}

"""
Represents an Lst Pool in the system.
"""
type LstPool @entity {
  """
  Lst Pool's unique identifier.
  """
  id: ID!

  """
  The current state of the Lst Pool.
  """
  currentState: LstPoolState!

  """
  The total stake amount in the Lst Pool.
  """
  totalStake: BigInt!

  """
  List of members in the Lst Pool.
  """
  members: [LstPoolMember!]! @derivedFrom(field: "lstPool")

  """
  History of state changes for the Lst Pool.
  """
  stateHistory: [LstPoolStateChange!]! @derivedFrom(field: "lstPool")
}

"""
Enum representing the current state of an Lst Pool.
"""
enum LstPoolState {
  """
  The Lst Pool is open for new members.
  """
  OPEN

  """
  The Lst Pool is in the process of being destroyed.
  """
  DESTROYING

  """
  The Lst Pool is closed and not accepting new members.
  """
  CLOSED
}

"""
Represents a change in the state of an Lst Pool.
"""
type LstPoolStateChange @entity {
  """
  Unique identifier for the state change. Composite key: LstPool ID + block number
  """
  id: ID!

  """
  The Lst Pool whose state has changed.
  """
  lstPool: LstPool!

  """
  The new state of the Lst Pool.
  """
  state: LstPoolState!

  """
  The block number at which the state change occurred.
  """
  blockNumber: Int!
}

"""
Represents a member of an Lst Pool.
"""
type LstPoolMember @entity {
  """
  Unique identifier for the Lst Pool member. Composite key: LstPool ID + member ID
  """
  id: ID!

  """
  The Lst Pool to which the member belongs.
  """
  lstPool: LstPool!

  """
  The account associated with this Lst Pool Member.
  """
  account: Account!

  """
  The current stake amount of the member in the Lst Pool.
  """
  currentStake: BigInt!

  """
  History of stake changes for the member.
  """
  stakeHistory: [MemberStakeChange!]! @derivedFrom(field: "member")
}

"""
Represents a change in the stake of a Lst Pool member.
"""
type MemberStakeChange @entity {
  """
  Unique identifier for the stake change. Composite key: LstPool ID + member ID + block number
  """
  id: ID!

  """
  The Lst Pool member whose stake has changed.
  """
  member: LstPoolMember!

  """
  The amount of the stake change (positive for increase, negative for decrease).
  """
  amount: BigInt!

  """
  The block number at which the stake change occurred.
  """
  blockNumber: Int!
}

"""
Blueprint entity: Represents service blueprints in the system
"""
type Blueprint @entity {
  """
  Unique identifier for the Blueprint.
  """
  id: ID!

  """
  The owner of the Blueprint.
  """
  owner: Account!

  """
  The creation block number of the Blueprint.
  """
  createdAt: Int!

  """
  List of Service Requests associated with this Blueprint.
  """
  serviceRequests: [ServiceRequest!]! @derivedFrom(field: "blueprint")

  """
  List of Services associated with this Blueprint.
  """
  services: [Service!]! @derivedFrom(field: "blueprint")
}

"""
BlueprintOperator entity: Represents the relationship between blueprints and operators
"""
type BlueprintOperator @entity {
  """
  Unique identifier for the relationship. Composite key: Blueprint ID + Operator ID
  """
  id: ID!

  """
  The Blueprint associated with this relationship.
  """
  blueprint: Blueprint!

  """
  The Operator associated with this relationship.
  """
  operator: Operator!

  """
  The registration block number of the relationship.
  """
  registeredAt: Int!

  """
  The last update block number of the relationship.
  """
  updatedAt: Int!

  """
  Indicates whether the relationship is currently active.
  """
  isActive: Boolean!
}

"""
Represents a Service Request in the system.
"""
type ServiceRequest @entity {
  """
  Unique identifier for the Service Request.
  """
  id: ID!

  """
  The owner of the Service Request.
  """
  owner: Account!

  """
  The blueprint associated with this Service Request.
  """
  blueprint: Blueprint!

  """
  List of asset IDs associated with this Service Request.
  """
  assetIds: [BigInt!]!

  """
  The Service associated with this Service Request.
  """
  service: Service @derivedFrom(field: "serviceRequest")

  """
  The creation block number of the Service Request.
  """
  createdAt: Int!
}

"""
Represents a relationship between a Service Request and an Operator.
"""
type ServiceRequestOperator @entity {
  """
  Unique identifier for the relationship. Composite key: Service Request ID + Operator ID
  """
  id: ID!

  """
  The Service Request associated with this relationship.
  """
  serviceRequest: ServiceRequest!

  """
  The Operator associated with this relationship.
  """
  operator: Operator!

  """
  The approval block number.
  """
  approvedAt: Int

  """
  The rejection block number.
  """
  rejectedAt: Int

  """
  The creation block number of the relationship.
  """
  createdAt: Int!
}

"""
Represents a Service in the system.
"""
type Service @entity {
  """
  Unique identifier for the Service.
  """
  id: ID!

  """
  The Service Request associated with this Service.
  """
  serviceRequest: ServiceRequest!

  """
  The owner of the Service.
  """
  owner: Account!

  """
  List of asset IDs associated with this Service.
  """
  assetIds: [BigInt!]!

  """
  The blueprint associated with this Service.
  """
  blueprint: Blueprint!

  """
  List of job calls associated with this Service.
  """
  jobCalls: [JobCall!]! @derivedFrom(field: "service")

  """
  List of job results associated with this Service.
  """
  jobResults: [JobResult!]! @derivedFrom(field: "service")

  """
  The creation block number of the Service.
  """
  createdAt: Int!

  """
  The block number when the Service was terminated.
  """
  terminatedAt: Int
}

"""
Represents a relationship between a Service and an Operator.
"""
type ServiceOperator @entity {
  """
  Unique identifier for the relationship. Composite key: Service ID + Operator ID
  """
  id: ID!

  """
  The Service associated with this relationship.
  """
  service: Service!

  """
  The Operator associated with this relationship.
  """
  operator: Operator!

  """
  The creation block number of the relationship.
  """
  createdAt: Int!
}

"""
Represents a Job Call in the system.
"""
type JobCall @entity {
  """
  Unique identifier for the Job Call.
  """
  id: ID!

  """
  The caller of the Job.
  """
  caller: Account!

  """
  The Service associated with this Job Call.
  """
  service: Service!

  """
  The job ID of the Job Call.
  """
  jobId: Int!

  """
  The job result associated with this Job Call.
  """
  jobResult: JobResult @derivedFrom(field: "jobCall")

  """
  The creation block number of the Job Call.
  """
  createdAt: Int!
}

"""
Represents a Job Result in the system.
"""
type JobResult @entity {
  """
  Unique identifier for the Job Result. Composite key: Job Call ID + Service ID
  """
  id: ID!

  """
  The Job Call associated with this Job Result.
  """
  jobCall: JobCall!

  """
  The Service associated with this Job Result.
  """
  service: Service!

  """
  The operator that executed the Job.
  """
  operator: Operator!

  """
  The creation block number of the Job Result.
  """
  createdAt: Int!
}
